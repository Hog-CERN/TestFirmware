# name: Hog
# on: [push]
# jobs:
#   check-bats-version:
#     runs-on: self-hosted
#     env:
#       HOG_PATH: /opt/Xilinx/Vivado/2020.2/bin
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2
#       with:
#          submodules: recursive
#          ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}`
#          fetch-depth: 0
#       run : |
#           npm run release
#           git remote rm origin
#           git remote add origin https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/project/repo.git
#           git remote -v # for debug only 
#           git show-ref # for debug only 
#           git push --follow-tags origin HEAD:master
  #     - name: Create Project
  #       run: |
  #               git submodule init
  #               git submodule update --remote 
  #               export PATH=${HOG_PATH}:$PATH
  #               echo $PATH
  #               git fetch -p
  #               git --version
  #               cd Hog/ && git fetch -p
  #               cd ..
  #               ./Hog/CreateProject.sh example
#     - name: Archive production artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: Create artifacts
#         path: |
#           Projects
          
      
# .github/workflows/deploy.yml

name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted
    env:
      HOG_PATH: /opt/Xilinx/Vivado/2020.2/bin
    steps:
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
     - name: Create Project
        run: |
                git submodule init
                git submodule update --remote 
                export PATH=${HOG_PATH}:$PATH
                echo $PATH
                git fetch -p
                git --version
                cd Hog/ && git fetch -p
                cd ..
                ./Hog/CreateProject.sh example     